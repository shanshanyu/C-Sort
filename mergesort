#include <stdio.h>
#include <stdlib.h>
void merge(int s[], int low, int mid, int high) {
	int i, j, k;
	i = low;
	j = mid + 1;
	k = 0;
	int *temp = malloc((high - low + 1) * sizeof(int));
	if (!temp) return;
	while (i <= mid && j <= high) {
		if (s[i] < s[j])temp[k++] = s[i++];
		else temp[k++] = s[j++];
	}
	while(i <= mid) temp[k++] = s[i++];
	while (j <= high) temp[k++] = s[j++];
	for (i = 0;i < k;i++) s[low+i] = temp[i];
	free(temp);
}
void mergesort(int s[], int low, int high) { 
	int mid;
	if(low<high){
		mid = (high + low) / 2;
		mergesort(s, low, mid);
		mergesort(s, mid + 1, high);
		merge(s, low, mid, high);
		
	}
}
int main() {
	int a[] = { 1,3,2,5,4,6,8,7,10,9 };
	mergesort(a, 0, 9);
	int i;
	for (i = 0;i<10;i++)printf("%d\n", a[i]);
	system("pause");
}
